{
    "name": "padlock",
    "version": "1.0.0",
    "description": "Padlock works to prevent unexpected code execution when dealing with asynchronous callbacks. Call a function with lock to execute it as soon as a lock can be attained, and unlock it at all of your possible callback end-points. Use the same lock on other functions that you don't want to interrupt. Code will execute in order as the lock can be acquired.",
    "keywords": ["redis", "job", "feed", "queue", "publish", "subscribe", "push", "live", "cluster"],
    "homepage": "github.com/andyet/padlock",
    "author": {"name": "Nathan Fritz", "email": "nathan@andyet.net", "url": "http://andyet.net/team/nathan"},
    "contributors": [],
    "files": [],
    "main": "./padlock.js",
    "bin": {},
    "man": [],
    "directories": {},
    "repository": {"type": "git", "url": "https://github.com/andyet/padlock.git"}, 
    "dependencies": {}
}
